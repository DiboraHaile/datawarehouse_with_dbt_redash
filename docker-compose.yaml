# version: "2"
# x-redash-service: &redash-service
#   image: redash/redash:8.0.0.b32245
#   depends_on:
#     - postgres
#     - redis
#   env_file: ./env
#   restart: always
# services:
#   server:
#     <<: *redash-service
#     command: server
#     ports:
#       - "5001:5000"
#     environment:
#       REDASH_WEB_WORKERS: 4
#   scheduler:
#     <<: *redash-service
#     command: scheduler
#     environment:
#       QUEUES: "celery"
#       WORKERS_COUNT: 1
#   scheduled_worker:
#     <<: *redash-service
#     command: worker
#     environment:
#       QUEUES: "scheduled_queries,schemas"
#       WORKERS_COUNT: 1
#   adhoc_worker:
#     <<: *redash-service
#     command: worker
#     environment:
#       QUEUES: "queries"
#       WORKERS_COUNT: 2
#   # networks:
#   #   - dw_network
#   redis:
#     image: redis:5.0-alpine
#     restart: always
#   postgres:
#     image: postgres:9.6-alpine
#     env_file: ./env
#     volumes:
#       - ./postgres-data:/var/lib/postgresql/data
#     restart: always
#   nginx:
#     image: redash/nginx:latest
#     ports:
#       - "8000:80"
#     depends_on:
#       - server
#     links:
#       - server:redash
#     restart: always

services:
  pgdatabase:
    image: postgres:14
    env_file: ./env
    volumes:
      - "./postgres_data:/var/lib/postgresql/data:rw"
    ports:
      - "5435:5432"
    networks:
    - custom-network
  pgadmin:
    image: dpage/pgadmin4
    env_file: ./env
    ports:
      - "8081:80"
    networks:
      - custom-network

  # create a network for the commonication ammong the image in the 
# redash continer and airflow container.
networks:
  custom-network:
    external: true


